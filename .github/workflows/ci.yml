name: CI

on:
  push:
    branches-ignore: [deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout workspace
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-workspace
        submodules: recursive

    - name: Pull submodule updates
      run: git submodule update --recursive --remote

    - name: Remove current repo from workspace
      run: rm -rfv ${{ github.event.repository.name }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: ${{ github.event.repository.name }}

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      id: rust
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Set up rust cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.cache/go-build
          ~/go/pkg/mod
          target
        key: v4-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: v4-${{ github.job }}-${{ runner.os }}-rust-

    - name: Update deps
      run: cargo update -p pkgcraft-c

    - name: Install cargo-c via binary package on Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: curl -L https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-linux.tar.gz | tar xvzf - -C ~/.cargo/bin

    - name: Install cargo-c via binary package on MacOS
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        curl -L https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-macos.zip > cargo-c.zip
        unzip -o cargo-c.zip -d ~/.cargo/bin
        rm cargo-c.zip

    - name: Build and install C library
      run: |
        cargo cinstall -p pkgcraft-c --prefix="${PWD}/pkgcraft" --pkgconfigdir="${PWD}/pkgcraft"
        echo "PKG_CONFIG_PATH=${PWD}/pkgcraft" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${PWD}/pkgcraft/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${PWD}/pkgcraft/lib" >> $GITHUB_ENV

    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.18.0'

    - name: Build and test
      working-directory: ${{ github.event.repository.name }}
      run: |
        go build
        go test -v -race -coverprofile=coverage.out -bench=.

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: pkgcraft-go/coverage.out
