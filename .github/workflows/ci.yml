name: CI

on:
  push:
    branches-ignore: [deploy]
    paths:
      - "**/*.go"
      - "testdata/**"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "**/*.go"
      - "testdata/**"
  workflow_dispatch:
    inputs:
      go-version:
        required: false
        type: string
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.vars.outputs.go-version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-go

    - name: Set golang versions to test against
      id: vars
      run: |
        if [[ "${{ github.event_name }}" == workflow_* && -n "${{ inputs.go-version }}" ]]; then
          echo "go-version=$(jq 'split(",")' -Rc <(echo '${{ inputs.go-version }}'))" >> $GITHUB_OUTPUT
        else
          min_go_ver=$(grep '^go ' go.mod | cut -f2 -d ' ')
          echo "go-version=['${min_go_ver}', 'stable']" >> $GITHUB_OUTPUT
        fi

  test:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: ${{ fromJson(needs.setup.outputs.go-version) }}

    steps:
    - name: Set pkgcraft dir env var
      run: echo pkgcraft_dir=~/pkgcraft >> $GITHUB_ENV

    - name: Download prebuilt pkgcraft-c library
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ secrets.PKGCRAFT_CI_TOKEN }}
        repo: pkgcraft/pkgcraft
        branch: main
        workflow: pkgcraft-c.yml
        name: pkgcraft-c-${{ runner.os }}
        path: ${{ env.pkgcraft_dir }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-go
        submodules: true

    - name: Override build variables
      run: |
        echo "PKG_CONFIG_PATH=${pkgcraft_dir}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${pkgcraft_dir}/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${pkgcraft_dir}/lib" >> $GITHUB_ENV

    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build and test
      run: |
        go build
        go test -v -race -coverprofile=coverage.out -bench=. ./...

    - name: Upload coverage to Codecov
      if: startsWith(github.event_name, 'workflow_') != true
      uses: codecov/codecov-action@v3
      with:
        files: coverage.out
